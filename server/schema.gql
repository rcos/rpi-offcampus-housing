# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Response from USPS Address Verify API"""
type AddressVerification {
  address_1: String!
  address_2: String!
  city: String!
  state: String!
  zip: String!
}

type AddressVerificationAPIResponse {
  data: AddressVerification
  error: String
  success: Boolean!
}

"""Cas Auth Information"""
type CasAuthInfo {
  cas_id: String
  institution_id: String
}

input CollectionFetchInput {
  count: Int!
  offset: Int!
}

"""Ownership Confirmation Activity"""
type ConfirmationActivity {
  date_submitted: String!
  message: String!
  user_id: String!
  user_type: String!
}

"""Institution Model"""
type Institution {
  _id: ID!
  location: InstitutionLocationInfo!
  name: String!
  s3_thumb_key: String
}

type InstitutionAPIResponse {
  data: Institution
  error: String
  success: Boolean!
}

"""A collection of Institutions"""
type InstitutionList {
  institutions: [Institution!]!
}

type InstitutionListAPIResponse {
  data: InstitutionList
  error: String
  success: Boolean!
}

"""Institution Location"""
type InstitutionLocationInfo {
  address: String!
  city: String!
  state: String!
  zip: String!
}

"""Landlord model"""
type Landlord {
  _id: ID!
  email: String!
  first_name: String!
  last_name: String!
  password: String
  phone_number: String
  type: String
}

type LandlordAPIResponse {
  data: Landlord
  error: String
  success: Boolean!
}

input LandlordInput {
  _id: String
  email: String
  first_name: String
  last_name: String
  password: String
  phone_number: String
}

type Mutation {
  addOwnershipConfirmationActivity(date_submitted: String!, message: String!, ownership_id: String!, user_id: String!, user_type: String!): OwnershipAPIResponse!
  addOwnershipDocuments(documents_info: [OwnershipDocumentInput!]!, ownership_id: String!): OwnershipAPIResponse!
  addPropertyToStudentCollection(property_id: String!, student_id: String!): PropertyCollectionEntriesAPIResponse!
  createLandlord(new_landlord: LandlordInput!): LandlordAPIResponse!
  createOwnershipReview(address_line: String!, address_line_2: String!, city: String!, landlord_id: String!, state: String!, zip_code: String!): OwnershipAPIResponse!
  removePropertyFromStudentCollection(property_id: String!, student_id: String!): PropertyCollectionEntriesAPIResponse!
  updateStudent(_id: String!, new_student: StudentInput!): StudentAPIResponse!
}

"""Property Ownership Document Information"""
type Ownership {
  _id: ID!
  confirmation_activity: [ConfirmationActivity!]!
  date_submitted: String!
  landlord_doc: Landlord
  landlord_id: String!
  ownership_documents: [OwnershipDocument!]!
  property_doc: Property
  property_id: String
  status: String!
}

type OwnershipAPIResponse {
  data: Ownership
  error: String
  success: Boolean!
}

"""Property Ownership Collection"""
type OwnershipCollection {
  ownerships: [Ownership!]!
}

type OwnershipCollectionAPIResponse {
  data: OwnershipCollection
  error: String
  success: Boolean!
}

"""Ownership Document Information"""
type OwnershipDocument {
  date_uploaded: String!
  format: String!
  s3_doc_key: String!
}

"""Input for adding ownership documents"""
input OwnershipDocumentInput {
  format: String!
  s3_doc_key: String!
}

"""Property model"""
type Property {
  _id: ID!
  landlord: String!
  landlord_doc: Landlord
  location: String!
  sq_ft: Float!
  submission_id: String
}

type PropertyAPIResponse {
  data: Property
  error: String
  success: Boolean!
}

"""An array of collection entries"""
type PropertyCollectionEntries {
  collection_entries: [Property!]!
}

type PropertyCollectionEntriesAPIResponse {
  data: PropertyCollectionEntries
  error: String
  success: Boolean!
}

"""Collection of properties"""
type PropertyList {
  properties: [Property!]!
}

type PropertyListAPIResponse {
  data: PropertyList
  error: String
  success: Boolean!
}

input PropertyReviewInput {
  count: Int
  offset: Int
  withReviews: Boolean!
}

input PropertySearchInput {
  count: Int
  offset: Int
}

type Query {
  getInstitution(_id: String!): InstitutionAPIResponse!
  getLandlord(_id: String!): LandlordAPIResponse!
  getMatchingInstitutions(partial_name: String!): InstitutionListAPIResponse!
  getOwnership(_id: String!): OwnershipAPIResponse!
  getOwnershipsForLandlord(landlord_id: String!): OwnershipCollectionAPIResponse!
  getOwnershipsInReview: OwnershipCollectionAPIResponse!
  getProperty(_id: String!, reviewOptions: PropertyReviewInput!, withLandlord: Boolean!): PropertyAPIResponse!
  getStudent(_id: String!): StudentAPIResponse!
  getStudentSavedCollection(_id: String!, collectionOptions: CollectionFetchInput!): PropertyCollectionEntriesAPIResponse!
  searchProperties(searchOptions: PropertySearchInput!): PropertyListAPIResponse!
  verifyAddress(address_1: String!, address_2: String!, city: String!, state: String!, zip: String!): AddressVerificationAPIResponse!
}

"""Student model"""
type Student {
  _id: ID!
  auth_info: CasAuthInfo
  elevated_privileges: [String!]
  email: String!
  first_name: String!
  last_name: String!
  phone_number: String!
  saved_collection: [String!]
  type: String
}

type StudentAPIResponse {
  data: Student
  error: String
  success: Boolean!
}

input StudentInput {
  _id: String
  email: String
  first_name: String
  last_name: String
}
